#pragma once
#include <windows.h>
#include <tchar.h>
//窗口消息解码
#define IDSTR(MsgID) MsgID,_T(#MsgID)

typedef struct
{
	DWORD dwMsg;
	LPCTSTR szMsgText;
	LPCTSTR szNote;
} t_MSGNOTE;


static t_MSGNOTE messagesnote[] =
{
	IDSTR(WM_NULL), _T("空消息,可检测程序是否有响应等"),
	IDSTR(WM_CREATE), _T("新建一个窗口"),
	IDSTR(WM_DESTROY), _T("销毁一个窗口"),
	//IDSTR(0x0004),_T(""),
	IDSTR(WM_MOVE), _T("移动一个窗口"),
	IDSTR(WM_SIZE), _T("改变一个窗口的大小"),
	IDSTR(WM_ACTIVATE), _T("一个窗口被激活或失去激活状态"),
	IDSTR(WM_SETFOCUS), _T("将焦点转向一个窗口"),
	IDSTR(WM_KILLFOCUS), _T("使一个窗口失去焦点"),
	IDSTR(0x0009),_T(""),
	IDSTR(WM_ENABLE), _T("使一个窗口处于可用状态"),
	IDSTR(WM_SETREDRAW), _T("设置窗口是否能重绘"),
	IDSTR(WM_SETTEXT), _T("设置一个窗口的文本"),
	IDSTR(WM_GETTEXT), _T("复制窗口的文本到缓冲区"),
	IDSTR(WM_GETTEXTLENGTH), _T("得到窗口的文本长度(不含结束符)"),
	IDSTR(WM_PAINT), _T("窗口重绘"),
	IDSTR(WM_CLOSE), _T("用户关闭窗口时会发送本消息,紧接着会发送WM_DESTROY消息"),
	IDSTR(WM_QUERYENDSESSION), _T("关机或注销时系统会按优先级给各进程发送WM_QUERYENDSESSION,告诉应用程序要关机或注销了"),
	IDSTR(WM_QUIT), _T("关闭消息循环结束程序的运行"),
	IDSTR(WM_QUERYOPEN), _T("最小化的窗口即将被恢复以前的大小位置"),
	IDSTR(WM_ERASEBKGND), _T("当一个窗口的背景必须被擦除时本消息会被触发(如:窗口大小改变时)"),
	IDSTR(WM_SYSCOLORCHANGE), _T("当系统颜色改变时,发送本消息给所有顶级窗口"),
	IDSTR(WM_ENDSESSION), _T("关机或注销时系统会发出WM_QUERYENDSESSION消息,然后将本消息发送给应用程序,通知程序会话结束"),
	IDSTR(0x0017),_T(""),
	IDSTR(WM_SHOWWINDOW), _T("发送本消息给一个窗口,以便隐藏或显示该窗口"),
	IDSTR(0x0019),_T(""),
	IDSTR(WM_WININICHANGE), _T("读写\"win.ini\"时会发送本消息给所有顶层窗口,通知其它进程该文件已被更改"),
	IDSTR(WM_DEVMODECHANGE), _T("改变设备模式设置(\"win.ini\")时,处理本消息的应用程序可重新初始化它们的设备模式设置"),
	IDSTR(WM_ACTIVATEAPP), _T("窗口进程激活状态改动,正被激活的窗口属于不同的应用程序 "),//??
	IDSTR(WM_FONTCHANGE), _T("当系统的字体资源库变化时发送本消息给所有顶级窗口"),
	IDSTR(WM_TIMECHANGE), _T("当系统的时间变化时发送本消息给所有顶级窗口"),
	IDSTR(WM_CANCELMODE), _T("发送本消息来取消某种正在进行的模态(操作)(如鼠示捕获),例如:启动一个模态窗口时,父窗会收到本消息;该消息无参数"),
	IDSTR(WM_SETCURSOR), _T("若鼠标光标在某窗口内移动且鼠标没被捕获时,就会发送本消息给某个窗口"),
	IDSTR(WM_MOUSEACTIVATE), _T("当鼠标光标在某个未激活窗口内,而用户正按着鼠标的某个键时,会发送本消息给当前窗口"),
	IDSTR(WM_CHILDACTIVATE), _T("点击窗口标题栏或当窗口被激活、移动、大小改变时,会发送本消息给MDI子窗口"),
	IDSTR(WM_QUEUESYNC), _T("本消息由基于计算机的训练程序发送,通过WH_JOURNALPALYBACK的HOOK程序分离出用户输入消息"),
	IDSTR(WM_GETMINMAXINFO), _T("当窗口将要改变大小或位置时,由系统发送本消息给窗口,用户拖动一个可重置大小的窗口时便会发出本消息"),
	IDSTR(0x0025),_T(""),
	IDSTR(WM_PAINTICON), _T("当一个最小化的窗口图标将被重绘时发送本消息"),
	IDSTR(WM_ICONERASEBKGND), _T("本消息发送给某个最小化的窗口,仅当它在画图标前它的背景必须被重画"),
	IDSTR(WM_NEXTDLGCTL), _T("发送本消息给一个对话框程序窗口过程,以便在各控件间设置键盘焦点位置"),
	IDSTR(0x0029),_T(""),
	IDSTR(WM_SPOOLERSTATUS), _T("每当打印管理列队增加或减少一条作业时就会发出本消息"),
	IDSTR(WM_DRAWITEM), _T("按钮、组合框、列表框、菜单的外观改变时会发送本消息给这些控件的所有者"),
	IDSTR(WM_MEASUREITEM), _T("按钮、组合框、列表框、列表控件、菜单项被创建时会发送本消息给这些控件的所有者"),
	IDSTR(WM_DELETEITEM), _T("当列表框或组合框被销毁或通过LB_DELETESTRING、LB_RESETCONTENT、CB_DELETESTRING或CB_RESETCONTENT消息删除某些项时,会发送本消息给这些控件的所有者"),
	IDSTR(WM_VKEYTOITEM), _T("LBS_WANTKEYBOARDINPUT风格的列表框会发出本消息给其所有者,以便响应WM_KEYDOWN消息"),
	IDSTR(WM_CHARTOITEM), _T("LBS_WANTKEYBOARDINPUT风格的列表框会发送本消息给其所有者,以便响应WM_CHAR消息"),
	IDSTR(WM_SETFONT), _T("指定控件所用字体"),
	IDSTR(WM_GETFONT), _T("得到当前控件绘制其文本所用的字体"),
	IDSTR(WM_SETHOTKEY), _T("为某窗口关联一个热键"),
	IDSTR(WM_GETHOTKEY), _T("确定某热键与某窗口是否相关联"),
	IDSTR(0x0034),_T(""),
	IDSTR(0x0035),_T(""),
	IDSTR(0x0036),_T(""),
	IDSTR(WM_QUERYDRAGICON), _T("本消息发送给最小化的窗口(iconic),当该窗口将被拖放而其窗口类中没有定义图标,应用程序能返回一个图标或光标的句柄。当用户拖放图标时系统会显示这个图标或光标"),
	IDSTR(0x0038),_T(""),
	IDSTR(WM_COMPAREITEM), _T("可发送本消息来确定组合框(CBS_SORT)或列表框(LBS_SORT)中新增项的相对位置"),
	
	IDSTR(WM_COMPACTING), _T("显示内存已经很少了"),
	IDSTR(0x0042),_T(""),
	IDSTR(0x0043),_T(""),
	IDSTR(WM_COMMNOTIFY), _T("Win3.1中,当串口事件产生时,通讯设备驱动程序发送消息本消息给系统,指示输入输出队列的状态"),
	IDSTR(0x0045),_T(""),
	IDSTR(WM_WINDOWPOSCHANGING), _T("本消息会发送给那些大小和位置(Z_Order)将被改变的窗口,以调用SetWindowPos函数或其它窗口管理函数"),
	IDSTR(WM_WINDOWPOSCHANGED), _T("本消息会发送给那些大小和位置(Z_Order)已被改变的窗口,以调用SetWindowPos函数或其它窗口管理函数"),
	IDSTR(WM_POWER), _T("当系统将要进入暂停状态时发送本消息(适用于16位的windows)"),
	IDSTR(0x0049),_T(""),
	IDSTR(WM_COPYDATA), _T("当一个应用程序传递数据给另一个应用程序时发送本消息"),
	IDSTR(WM_CANCELJOURNAL), _T("当用户取消程序日志激活状态时,发送本消息给那个应用程序。该消息使用空窗口句柄发送"),
	IDSTR(0x004C),_T(""),
	IDSTR(0x004D),_T(""),
	IDSTR(WM_NOTIFY), _T("当某控件的某事件已发生或该控件需得到一些信息时,发送本消息给其父窗"),
	IDSTR(0x004F),_T(""),
	IDSTR(WM_INPUTLANGCHANGEREQUEST), _T("当用户通过过单击任务栏上的语言指示符或某快捷键组合选择改变输入法时系统会向焦点窗口发送本消息"),
	IDSTR(WM_INPUTLANGCHANGE), _T("切换输入法后,系统会发送本消息给受影响的顶层窗口"),
	IDSTR(WM_TCARD), _T("程序已初始化windows帮助例程时会发送本消息给应用程序"),
	IDSTR(WM_HELP), _T("按下<F1>后,若某菜单是激活的,就发送本消息给此窗口关联的菜单;否则就发送给有焦点的窗口;若当前都没有焦点,就把本消息发送给当前激活的窗口"),
	IDSTR(WM_USERCHANGED), _T("当用户已登入或退出后发送本消息给所有窗口;当用户登入或退出时系统更新用户的具体设置信息,在用户更新设置时系统马上发送本消息"),
	IDSTR(WM_NOTIFYFORMAT), _T("公用控件、自定义控件和其父窗通过本消息判断控件在WM_NOTIFY通知消息中是使用ANSI还是UNICODE,使用本消息能使某个控件与它的父控件间进行相互通信"),
	IDSTR(WM_CONTEXTMENU), _T("当用户在某窗口中点击右键就发送本消息给该窗口,设置右键菜单"),
	IDSTR(WM_STYLECHANGING), _T("当调用SetWindowLong函数将要改变一个或多个窗口的风格时,发送本消息给那个窗口"),
	IDSTR(WM_STYLECHANGED), _T("当调用SetWindowLong函数改变一个或多个窗口的风格后,发送本消息给那个窗口"),
	IDSTR(WM_DISPLAYCHANGE), _T("当显示器的分辨率改变后,发送本消息给所有窗口"),
	IDSTR(WM_GETICON), _T("本消息发送给某个窗口,用于返回与某窗口有关联的大图标或小图标的句柄"),
	IDSTR(WM_SETICON), _T("应用程序发送本消息让一个新的大图标或小图标与某窗口相关联"),
	IDSTR(WM_NCCREATE), _T("当某窗口首次被创建时,本消息在WM_CREATE消息发送前发送"),
	IDSTR(WM_NCDESTROY), _T("本消息通知某窗口,非客户区正在销毁"),
	IDSTR(WM_NCCALCSIZE), _T("当某窗口的客户区的大小和位置须被计算时发送本消息"),
	IDSTR(WM_NCHITTEST), _T("当用户在在非客户区移动鼠标、按住或释放鼠标时发送本消息(击中测试);若鼠标没有被捕获,则本消息在窗口得到光标之后发出,否则消息发送到捕获到鼠标的窗口"),
	IDSTR(WM_NCPAINT), _T("当窗口框架(非客户区)必须被被重绘时,应用程序发送本消息给该窗口"),
	IDSTR(WM_NCACTIVATE), _T("本消息发送给某窗口,在窗口的非客户区被激活时重绘窗口"),
	IDSTR(WM_GETDLGCODE), _T("发送本消息给某个与对话框程序关联的控件,系统控制方位键和TAB键使输入进入该控件,通过响应本消息应用程序可把它当成一个特殊的输入控件并能处理它"),
	IDSTR(WM_SYNCPAINT), _T("当避免联系独立的GUI线程时,本消息用于同步刷新,本消息由系统确定是否发送"),
	IDSTR(WM_NCMOUSEMOVE), _T("当光标在某窗口的非客户区内移动时,发送本消息给该窗口"),
	IDSTR(WM_NCLBUTTONDOWN), _T("当光标在某窗口的非客户区内的同时按下鼠标左键,会发送本消息"),
	IDSTR(WM_NCLBUTTONUP), _T("当用户释放鼠标左键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCLBUTTONDBLCLK), _T("当用户双击鼠标左键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCRBUTTONDOWN), _T("当用户按下鼠标右键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCRBUTTONUP), _T("当用户释放鼠标右键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCRBUTTONDBLCLK), _T("当用户双击鼠标右键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCMBUTTONDOWN), _T("当用户按下鼠标中键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCMBUTTONUP), _T("当用户释放鼠标中键的同时光标在某窗口的非客户区内时,会发送本消息"),
	IDSTR(WM_NCMBUTTONDBLCLK), _T("当用户双击鼠标中键的同时光标在某窗口的非客户区内时,会发送本消息"),

	//滚动条消息
	IDSTR(SBM_SETPOS), _T("设置滚动条上滑块的位置"),
	IDSTR(SBM_GETPOS), _T("获取滚动条上滑块的位置"),
	IDSTR(SBM_SETRANGE), _T("设置滚动条的最大与最小位置值"),
	IDSTR(SBM_SETRANGEREDRAW), _T("设置滚动条的最大与最小位置值,并重绘滚动条"),
	IDSTR(SBM_GETRANGE), _T("获取滚动条的最大与最小位置值"),
	IDSTR(SBM_ENABLE_ARROWS), _T("设置滚动条的最大与最小位置值,并重绘滚动条"),
	IDSTR(SBM_SETSCROLLINFO), _T("设置滚动条的参数,本消息通过SCROLLINFO结构指定多种参数,具体指定哪些参数由结构中的fMask成员确定"),
	IDSTR(SBM_GETSCROLLINFO), _T("获取滚动条的参数,发送本消息后,将在SCROLLINFO结构中返回控件的多种参数,当然须事先设定结构的fMask成员以确定具体要取得哪些参数"),

	//按钮控件消息
	IDSTR(BM_GETCHECK), _T("获取单选按钮或复选框的状态"),
	IDSTR(BM_SETCHECK), _T("设置单选按钮或复选框的状态"),
	IDSTR(BM_GETSTATE), _T("确定单选按钮或复选框的状态"),
	IDSTR(BM_SETSTATE), _T("改变按钮的高亮状态"),
	IDSTR(BM_SETSTYLE), _T("改变按钮的风格"),
	IDSTR(BM_CLICK), _T("模拟用户点击按钮"),
	IDSTR(BM_GETIMAGE), _T("获取与按钮相关联的图片句柄(图标或位图)"),
	IDSTR(BM_SETIMAGE), _T("把按钮与某张图片相关联(图标或位图),注:按钮须有BS_ICON风格"),

	//按钮控件通知消息
	IDSTR(BN_CLICKED), _T("用户单击了按钮,父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_DBLCLK), _T("用户双击了按钮(BS_OWNERDRAW或BS_RADIOBUTTON风格),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_DISABLE), _T("按钮被禁止,父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_DOUBLECLICKED), _T("用户双击了按钮(与BN_DBLCLK同)(BS_OWNERDRAW或BS_RADIOBUTTON风格),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_HILITE), _T("用户选择(即加亮)了按钮(与BN_PUSHED相同),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_KILLFOCUS), _T("按钮失去了键盘焦点(按钮须有BS_NOTIFY风格才能发送本消息),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_PAINT), _T("按钮应当重绘,父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_PUSHED), _T("用户加亮了按钮(与BN_HILITE相同),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_SETFOCUS), _T("按钮收到键盘焦点(按钮须有BS_NOTIFY风格才能发送本消息),父窗通过WM_COMMAND息来接收本通知消息"),
	IDSTR(BN_UNHILITE), _T("按钮的加亮应当去掉(与BN_UNPUSHED相同),父窗通过WM_COMMAND来接收本通知消息"),
	IDSTR(BN_UNPUSHED), _T("按钮的加亮应当去掉(与BN_UNHILITE相同),父窗通过WM_COMMAND来接收本通知消息"),

	IDSTR(WM_KEYFIRST), _T("用于WinCE系统,本消息在使用GetMessage和PeekMessage函数时,用于过滤键盘消息"),
	IDSTR(WM_KEYDOWN), _T("当一个非系统按键被按下时(<ALT>键没有被按下),会发送本消息给拥有键盘焦点的窗口"),
	IDSTR(WM_KEYUP), _T("当一个非系统按键被释放弹起时(<ALT>键没有被按下),会发送本消息给拥有键盘焦点的窗口"),
	IDSTR(WM_CHAR), _T("按下某按键,并已发出WM_KEYDOWN、WM_KEYUP消息,本消息包含被按下的按键的字符码"),
	IDSTR(WM_DEADCHAR), _T("\"死字符\"消息,当使用TranslateMessage函数翻译WM_KEYUP消息时,发送本消息给拥有键盘焦点的窗口,注:德语键盘上,有些按键只是给字符添加音标的,并不产生字符,故称\"死字符\""),
	IDSTR(WM_SYSKEYDOWN), _T("当用户按住<ALT>键的同时又按下其它键时,发送本消息给拥有焦点的窗口"),
	IDSTR(WM_SYSKEYUP), _T("当用户释放一个按键的同时<ALT>键还按着时,发送本消息给拥有焦点的窗口"),
	IDSTR(WM_SYSCHAR), _T("当WM_SYSKEYDOWN消息被TranslateMessage函数翻译后,发送本消息给拥有焦点的窗口,注:<ALT>键被按下"),
	IDSTR(WM_SYSDEADCHAR), _T("\"死字符\"消息,当使用TranslateMessage函数翻译WM_SYSKEYDOWN消息时,发送本消息给拥有键盘焦点的窗口,注:德语键盘上,有些按键只是给字符添加音标的,并不产生字符,故称\"死字符\""),
	IDSTR(WM_KEYLAST), _T("用于WinCE系统,本消息在使用GetMessage和PeekMessage函数时,用于过滤键盘消息"),
	IDSTR(WM_IME_STARTCOMPOSITION), _T("当用户开始输入编码时,系统立即发送该消息到IME中,IME打开编码窗口,注:输入法相关"),
	IDSTR(WM_IME_ENDCOMPOSITION), _T("当编码结束时,IME发送本消息,用户程序可接受本消息,以便自己显示用户输入的编码,注:输入法相关"),
	IDSTR(WM_IME_COMPOSITION), _T("当用户改变了编码状态时,发送本消息,应用程序可通过调用ImmGetCompositionString函数获取新的编码状态"),
	IDSTR(WM_IME_KEYLAST), _T("当用户改变了编码状态时,发送本消息,应用程序可通过调用ImmGetCompositionString函数获取新的编码状态"),
	IDSTR(WM_INITDIALOG), _T("在某对话框程序被显示前发送本消息给该对话框程序,通常用本消息对控件进行一些初始化工作和执行其它任务"),
	IDSTR(WM_COMMAND), _T("用户选择一条菜单命令项或某控件发送一条通知消息给其父窗,或某快捷键被翻译时,本消息被发送"),
	IDSTR(WM_SYSCOMMAND), _T("当用户选择一条系统菜单命令、用户最大化或最小化或还原或关闭时，窗口会收到本消息"),
	IDSTR(WM_TIMER), _T("发生了定时器事件"),
	IDSTR(WM_HSCROLL), _T("当窗口的标准水平滚动条产生一个滚动事件时,发送本消息给该窗口"),
	IDSTR(WM_VSCROLL), _T("当窗口的标准垂直滚动条产生一个滚动事件时,发送本消息给该窗口"),
	IDSTR(WM_INITMENU), _T("当一个菜单将被激活时发送本消息,它发生在用户点击了某菜单项或按下某菜单键。它允许程序在显示前更改菜单"),
	IDSTR(WM_INITMENUPOPUP), _T("当一个下拉菜单或子菜单将被激活时发送本消息,它允许程序在它显示前更改菜单,却不更改全部菜单"),
	//IDSTR(WM_SYSTIMER), _T("系统用来通知光标跳动的一个消息"),
	IDSTR(WM_MENUSELECT), _T("当用户选择一条菜单项时,发送本消息给菜单的所有者(一般是窗口)"),
	IDSTR(WM_MENUCHAR), _T("当菜单已被激活且用户按下了某菜单字符键(菜单字符键用括号括着、带下划线,不同于快捷键),发送本消息给菜单的所有者"),
	IDSTR(WM_ENTERIDLE), _T("当一个模态对话框或菜单进入空闲状态时,发送本消息给它的所有者,一个模态对话框或菜单进入空闲状态就是在处理完一条或几条先前的消息后,没有消息在消息列队中等待"),
	IDSTR(WM_MENURBUTTONUP), _T("本消息允许程序为菜单项提供一个感知上下文的菜单(即快捷菜单),要为菜单项显示一下上下文菜单,请使用TPM_RECURSE标识调用TrackPopupMenuEx函数"),
	IDSTR(WM_MENUDRAG), _T("当用户拖动菜单项时,发送本消息给拖放菜单的拥有者,可让菜单支持拖拽,可使用OLE拖放传输协议启动拖放操作,注:菜单要具有MNS_DRAGDROP风格"),
	IDSTR(WM_MENUGETOBJECT), _T("当鼠标光标进入或离开菜单项时,本消息发送给支持拖放的菜单的拥有者,相关结构体:MENUGETOBJECTINFO,注:菜单要具有MNS_DRAGDROP风格"),
	IDSTR(WM_UNINITMENUPOPUP), _T("当一条下拉菜单或子菜单被销毁时,发送本消息"),
	IDSTR(WM_MENUCOMMAND), _T("当用户在一个菜单上作出选择时,会发送本消息,菜单要具有MNS_NOTIFYBYPOS风格(在MENUINFO结构体中设置)"),
	IDSTR(WM_CTLCOLORMSGBOX), _T("系统绘制消息框前发送本消息给消息框的所有者窗口,通过响应本消息,所有者窗口可通过使用给定的相关显示设备的句柄来设置消息框的文本和背景色"),
	IDSTR(WM_CTLCOLOREDIT), _T("当一个编辑框控件将要被绘制时,发送本消息给其父窗;通过响应本消息,所有者窗口可通过使用给定的相关显示设备的句柄来设置编辑框的文本和背景色"),
	IDSTR(WM_CTLCOLORLISTBOX), _T("当一个列表框控件将要被绘制前,发送本消息给其父窗;通过响应本消息,所有者窗口可通过使用给定的相关显示设备的句柄来设置列表框的文本和背景色"),
	IDSTR(WM_CTLCOLORBTN), _T("息设置按钮的背景色"),
	IDSTR(WM_CTLCOLORDLG), _T("设置对话框的背景色,通常是在WinnApp中使用SetDialogBkColor函数实现"),
	IDSTR(WM_CTLCOLORSCROLLBAR), _T("设置滚动条的背景色"),
	IDSTR(WM_CTLCOLORSTATIC), _T("设置一个静态控件的背景色"),

	//组合框控件消息
	IDSTR(CB_GETEDITSEL), _T("用于取得组合框所包含编辑框子控件中当前被选中的字符串的起止位置,对应函数:GetEditSel"),
	IDSTR(CB_LIMITTEXT), _T("用于限制组合框所包含编辑框子控件输入文本的长度"),
	IDSTR(CB_SETEDITSEL), _T("用于选中组合框所包含编辑框子控件中的部分字符串,对应函数:GetEditSel"),
	IDSTR(CB_ADDSTRING), _T("用于向组合框控件追加一个列表项(字符串)"),
	IDSTR(CB_DELETESTRING), _T("用于删除组合框中指定的列表项(字符串)"),
	IDSTR(CB_DIR), _T("用于向组合框控件所包含的列表框控件中添加一个文件名列表清单"),
	IDSTR(CB_GETCOUNT), _T("用于返回组合框控件中列表项的总项数"),
	IDSTR(CB_GETCURSEL), _T("用于返回当前被选择项的索引"),
	IDSTR(CB_GETLBTEXT), _T("获取组合框控件中指定列表项的字符串"),
	IDSTR(CB_GETLBTEXTLEN), _T("用于返回组合框控件中指定列表项的字符串的长度(不包括结束符0)"),
	IDSTR(CB_INSERTSTRING), _T("在组合框控件所包含的列表框子控件中的指定位置插入字符串"),
	IDSTR(CB_RESETCONTENT), _T("用于清除组合框控件所有列表项"),
	IDSTR(CB_FINDSTRING), _T("在组合框控件中根据给定的字符串查找匹配字符串(忽略大小写)"),
	IDSTR(CB_SELECTSTRING), _T("在组合框控件中设定与指定字符串相匹配的列表项为选中项"),
	IDSTR(CB_SETCURSEL), _T("在组合框控件中设置指定的列表项为当前选择项"),
	IDSTR(CB_SHOWDROPDOWN), _T("用于显示或关闭下拉式和下拉列表式组合框的列表框"),
	IDSTR(CB_GETITEMDATA), _T("组合框控件每个列表项都有一个32位的附加数据,本消息用于返回指定列表项的附加数据"),
	IDSTR(CB_SETITEMDATA), _T("用于更新组合框所包含的列表框所指定的列表项的32位附加数据"),
	IDSTR(CB_GETDROPPEDCONTROLRECT), _T("用于取组合框中列表框的屏幕位置"),
	IDSTR(CB_SETITEMHEIGHT), _T("指定组合框中列表项的显示高度(像素点)"),
	IDSTR(CB_GETITEMHEIGHT), _T("用于返回指定列表项的高度(像素点)"),
	IDSTR(CB_SETEXTENDEDUI), _T("指定下拉式或下拉列表式组合框是使用默认界面还是扩展界面"),
	IDSTR(CB_GETEXTENDEDUI), _T("用于返回组合框是否存在扩展界面"),
	IDSTR(CB_GETDROPPEDSTATE), _T("用于取组合框中列表框是否可见"),
	IDSTR(CB_FINDSTRINGEXACT), _T("在组合框中查找字符串,忽略大小写,与CB_FINDSTRING不同,本消息必须整个字符串相同"),
	IDSTR(CB_SETLOCALE), _T("设置组合框列表项当前用于排序的语言代码"),
	IDSTR(CB_GETLOCALE), _T("获取组合框列表项当前用于排序的语言代码"),
	IDSTR(CB_GETTOPINDEX), _T("获取组合框中列表框中第一个可见项的索引"),
	IDSTR(CB_SETTOPINDEX), _T("用于将指定的组合框中列表项设置为列表框的第一个可见项"),
	IDSTR(CB_GETHORIZONTALEXTENT), _T("用于返回组合框水平滚动的总宽度(像素点)(要具有水平滚动条)"),
	IDSTR(CB_SETHORIZONTALEXTENT), _T("用于设定组合框中的列表框的宽度"),
	IDSTR(CB_GETDROPPEDWIDTH), _T("取组合框中列表框的宽度(像素点)"),
	IDSTR(CB_SETDROPPEDWIDTH), _T("用于设定组合框中的列表框的最大允许宽度"),
	IDSTR(CB_INITSTORAGE), _T("只适用于Win95,当将要向组合框中列表框中加入大量表项时,本消息将预先分配一块内存,以免大量添加表项多次分配内存,从而加快程序运行速度"),
	IDSTR(CB_MSGMAX), _T("该消息还具有三个消息值:0x0162,0x0163,0x0165,消息含义不明,搜索了整个Visual Studio 6的目录也只有其定义,却未见其使用的相关代码"),

	//组合框控件通知消息
	IDSTR(CBN_CLOSEUP), _T("通知父窗(通过WM_COMMAND获知),组合框的列表框被关闭"),
	IDSTR(CBN_DBLCLK), _T("通知父窗(通过WM_COMMAND获知),用户双击了组合框中的一个字符串"),
	IDSTR(CBN_DROPDOWN), _T("通知父窗(通过WM_COMMAND获知),组合框的列表框被弹出"),
	IDSTR(CBN_EDITCHANGE), _T("通知父窗(通过WM_COMMAND获知),用户修改了组合框所含编辑框中的文本"),
	IDSTR(CBN_EDITUPDATE), _T("通知父窗(通过WM_COMMAND获知),组合框所含编辑框内的文本即将更新"),
	IDSTR(CBN_ERRSPACE), _T("通知父窗(通过WM_COMMAND获知),组合框内存不足"),
	IDSTR(CBN_KILLFOCUS), _T("通知父窗(通过WM_COMMAND获知),组合框失去输入焦点"),
	IDSTR(CBN_SELCHANGE), _T("通知父窗(通过WM_COMMAND获知),选择了组合框中的一项"),
	IDSTR(CBN_SELENDCANCEL), _T("通知父窗(通过WM_COMMAND获知),用户对组合框的选择应当被取消"),
	IDSTR(CBN_SELENDOK), _T("通知父窗(通过WM_COMMAND获知),用户对组合框的选择是合法的"),
	IDSTR(CBN_SETFOCUS), _T("通知父窗(通过WM_COMMAND获知),组合框获得输入焦点"),

	//列表框控件消息
	IDSTR(LB_ADDSTRING), _T("向列表框中添加字符串"),
	IDSTR(LB_INSERTSTRING), _T("向列表框中插入一个条目数据或字符串。不像LB_ADDSTRING消息,该消息不会激活LBS_SORT样式来对条目进行排序"),
	IDSTR(LB_DELETESTRING), _T("删除列表框中的一个字符串"),
	IDSTR(LB_SELITEMRANGEEX), _T("在多选状态下的列表框中选择一个或多个连续的条目"),
	IDSTR(LB_RESETCONTENT), _T("清除列表框中所有列表项"),
	IDSTR(LB_SETSEL), _T("在多选状态下的列表框中选择一个字符串"),
	IDSTR(LB_SETCURSEL), _T("在列表框中选择一个字符串,并将其所在的条目滚动到视野内,并高亮新选中的字符串"),
	IDSTR(LB_GETSEL), _T("获得列表框中一个条目的选择状态"),
	IDSTR(LB_GETCURSEL), _T("获得列表框中当前被选条目的索引。仅在单选状态的列表框有效"),
	IDSTR(LB_GETTEXT), _T("从列表框中获得一个字符串"),
	IDSTR(LB_GETTEXTLEN), _T("获得一个列表框中字符串的长度"),
	IDSTR(LB_GETCOUNT), _T("获得列表框中条目的数量"),
	IDSTR(LB_SELECTSTRING), _T("仅适用于单选择列表框,设定与指定字符串相匹配的列表项为选中项,会滚动列表框以使选择项可见"),
	IDSTR(LB_DIR), _T("在列表框中列出文件名"),
	IDSTR(LB_GETTOPINDEX), _T("返回列表框中第一个可见项的索引"),
	IDSTR(LB_FINDSTRING), _T("在列表框中查找匹配字符串(忽略大小写)"),
	IDSTR(LB_GETSELCOUNT), _T("仅用于多重选择列表框,本消息用于返回选择项的数目"),
	IDSTR(LB_GETSELITEMS), _T("仅用于多重选择列表框,本消息用于获得选中项的数目及位置"),
	IDSTR(LB_SETTABSTOPS), _T("设置列表框的光标(输入焦点)站数及索引顺序表"),
	IDSTR(LB_GETHORIZONTALEXTENT), _T("返回列表框的可滚动的宽度(像素点)"),
	IDSTR(LB_SETHORIZONTALEXTENT), _T("本消息设置列表框的滚动宽度"),
	IDSTR(LB_SETCOLUMNWIDTH), _T("为列表框指定列数"),
	IDSTR(LB_ADDFILE), _T("为列表框增加文件名"),
	IDSTR(LB_SETTOPINDEX), _T("用于列表框将中指定的列表项设置为列表框的第一个可见项,会将列表框滚动到合适的位置"),
	IDSTR(LB_GETITEMRECT), _T("用于列表框中获得列表项的客户区的RECT"),
	IDSTR(LB_GETITEMDATA), _T("列表框中每个列表项都有个32位附加数据,本消息用于返回指定列表项的附加数据"),
	IDSTR(LB_SETITEMDATA), _T("用于更新列表框中指定列表项的32位附加数据"),
	IDSTR(LB_SELITEMRANGE), _T("仅用于多重选择列表框,用来使指定范围内的列表项选中或落选"),
	IDSTR(LB_SETANCHORINDEX), _T("用于列表框中设置鼠标最后选中的表项成指定表项"),
	IDSTR(LB_GETANCHORINDEX), _T("用于列表框中鼠标最后选中的项的索引"),
	IDSTR(LB_SETCARETINDEX), _T("用于列表框中设置键盘输入焦点到指定表项"),
	IDSTR(LB_GETCARETINDEX), _T("用于列表框中返回具有矩形焦点的项目索引"),
	IDSTR(LB_SETITEMHEIGHT), _T("用于列表框中指定列表项显示高度"),
	IDSTR(LB_GETITEMHEIGHT), _T("用于列表框中返回列表框中某一项的高度(像素点)"),
	IDSTR(LB_FINDSTRINGEXACT), _T("用于列表框中查找字符串(忽略大小写),与LB_FINDSTRING不同,本消息必须整个字符串相同"),
	IDSTR(LB_SETLOCALE), _T("用于列表框中设置列表项当前用于排序的语言代码,当用户使用LB_ADDSTRING向组合框中的列表框中添加记录,并使用LBS_SORT风格进行重新排序时,必须使用该语言代码"),
	IDSTR(LB_GETLOCALE), _T("用于列表框中获取列表项当前用于排序的语言代码,当用户使用LB_ADDSTRING向组合框中的列表框中添加记录,并使用LBS_SORT风格进行重新排序时,必须使用该语言代码"),
	IDSTR(LB_SETCOUNT), _T("用于列表框中设置表项数目"),
	IDSTR(LB_INITSTORAGE), _T("只适用于Win95版本,当将要向列表框中加入大量表项时,本消息将预先分配一块内存,以免在以后的操作中一次次分配内存"),
	IDSTR(LB_ITEMFROMPOINT), _T("用于列表框中获得与指定点最近的项目索引"),
	IDSTR(LB_MSGMAX), _T("该消息还具有三个消息值:0x01B0,0x01B1,0x01B3,,消息含义不明,搜索了整个Visual Studio 6的目录也只有其定义,却未见其使用的相关代码"),

	//列表框控件通知消息
	IDSTR(LBN_DBLCLK), _T("通知父窗(通过WM_COMMAND获知),用户双击了列表框中的一项"),
	IDSTR(LBN_ERRSPACE), _T("通知父窗(通过WM_COMMAND获知),列表框内存不够"),
	IDSTR(LBN_KILLFOCUS), _T("通知父窗(通过WM_COMMAND获知),列表框正在失去输入焦点"),
	IDSTR(LBN_SELCANCEL), _T("通知父窗(通过WM_COMMAND获知),选择被取消"),
	IDSTR(LBN_SELCHANGE), _T("通知父窗(通过WM_COMMAND获知),选择了列表框中的另一项"),
	IDSTR(LBN_SETFOCUS), _T("通知父窗(通过WM_COMMAND获知),列表框获得输入焦点"),

	IDSTR(WM_MOUSEFIRST), _T("鼠标移动时发生(与WM_MOUSEMOVE等值),常用于判断鼠标消息的范围,比如:if(message >= WM_MOUSEFIRST)&&(message <= WM_MOUSELAST)"),
	IDSTR(WM_MOUSEMOVE), _T("移动鼠标"),
	IDSTR(WM_LBUTTONDOWN), _T("按下鼠标左键"),
	IDSTR(WM_LBUTTONUP), _T("释放鼠标左键"),
	IDSTR(WM_LBUTTONDBLCLK), _T("双击鼠标左键"),
	IDSTR(WM_RBUTTONDOWN), _T("按下鼠标右键"),
	IDSTR(WM_RBUTTONUP), _T("释放鼠标右键"),
	IDSTR(WM_RBUTTONDBLCLK), _T("双击鼠标右键"),
	IDSTR(WM_MBUTTONDOWN), _T("按下鼠标中键"),
	IDSTR(WM_MBUTTONUP), _T("释放鼠标中键"),
	IDSTR(WM_MBUTTONDBLCLK), _T("双击鼠标中键"),
	IDSTR(WM_MOUSEWHEEL), _T("当鼠标轮子转动时,发送本消息给当前拥有焦点的控件"),
	IDSTR(WM_MOUSELAST), _T("WM_MBUTTONDBLCLK的别名,通常用于判断鼠标消息的范围,对应的还有WM_MOUSEFIRST,例如:if(message > =  WM_MOUSEFIRST)&&(message <= WM_MOUSELAST)"),
	IDSTR(WM_PARENTNOTIFY), _T("当MDI子窗口被创建或被销毁,或用户按了一下鼠标键而光标在子窗口上时,发送本消息给其父窗"),
	IDSTR(WM_ENTERMENULOOP), _T("发送本消息通知应用程序的主窗口已进入菜单循环模式"),
	IDSTR(WM_EXITMENULOOP), _T("发送本消息通知应用程序的主窗口已退出菜单循环模式"),
	IDSTR(WM_NEXTMENU), _T("当使用左箭头光标键或右箭头光标键在菜单条与系统菜单之间切换时,会发送本消息给应用程序,相关结构体:MDINEXTMENU"),
	IDSTR(WM_SIZING), _T("当用户正在调整窗口大小时,发送本消息给窗口;通过本消息应用程序可监视窗口大小和位置,也可修改它们"),
	IDSTR(WM_CAPTURECHANGED), _T("当它失去捕获的鼠标时,发送本消息给窗口"),
	IDSTR(WM_MOVING), _T("当用户在移动窗口时发送本消息,通过本消息应用程序以监视窗口大小和位置,也可修改它们"),
	IDSTR(WM_POWERBROADCAST), _T("本消息发送给应用程序来通知它有关电源管理事件,比如待机休眠时会发送本消息"),
	IDSTR(WM_DEVICECHANGE), _T("当设备的硬件配置改变时,发送本消息给应用程序或设备驱动程序"),
	IDSTR(WM_MDICREATE), _T("发送本消息给多文档应用程序的客户窗口来创建一个MDI子窗口"),
	IDSTR(WM_MDIDESTROY), _T("发送本消息给多文档应用程序的客户窗口来关闭一个MDI子窗口"),
	IDSTR(WM_MDIACTIVATE), _T("发送本消息给多文档应用程序的客户窗口通知客户窗口激活另一个MDI子窗口,当客户窗口收到本消息后,它发出WM_MDIACTIVE消息给MDI子窗口(未激活)来激活它"),
	IDSTR(WM_MDIRESTORE), _T("发送本消息给MDI客户窗口,让子窗口从最大最小化恢复到原来的大小"),
	IDSTR(WM_MDINEXT), _T("发送本消息给MDI客户窗口,激活下一个或前一个窗口"),
	IDSTR(WM_MDIMAXIMIZE), _T("发送本消息给MDI客户窗口来最大化一个MDI子窗口"),
	IDSTR(WM_MDITILE), _T("发送本消息给MDI客户窗口,以平铺方式重新排列所有MDI子窗口"),
	IDSTR(WM_MDICASCADE), _T("发送本消息给MDI客户窗口,以层叠方式重新排列所有MDI子窗口"),
	IDSTR(WM_MDIICONARRANGE), _T("发送本消息给MDI客户窗口重新排列所有最小化的MDI子窗口"),
	IDSTR(WM_MDIGETACTIVE), _T("发送本消息给MDI客户窗口以找到激活的子窗口句柄"),
	IDSTR(WM_MDISETMENU), _T("发送本消息给MDI客户窗口,用MDI菜单代替子窗口的菜单"),
	IDSTR(WM_ENTERSIZEMOVE), _T("当某窗口进入移动或调整大小的模式循环时,本消息发送到该窗口"),
	IDSTR(WM_EXITSIZEMOVE), _T("确定用户改变窗口大小或改变窗口位置的事件是何时完成的"),
	IDSTR(WM_DROPFILES), _T("鼠标拖放时,放下事件产生时发送本消息,比如:文件拖放功能"),
	IDSTR(WM_MDIREFRESHMENU), _T("发送本消息给多文档应用程序的客户窗口,根据当前MDI子窗口更新MDI框架窗口的菜单"),
	//0x0235
	//......
	//0x0280
	IDSTR(WM_IME_SETCONTEXT), _T("应用程序的窗口激活时,系统将向应用程序发送WM_IME_SETCONTEXT消息,注:输入法相关"),
	IDSTR(WM_IME_NOTIFY), _T("可使用WM_IME_NOTIFY消息来通知关于IME窗口状态的常规改变,注:输入法相关"),
	IDSTR(WM_IME_CONTROL), _T("可使用WM_IME_CONTROL消息来改变字母组合窗口的位置,注:输入法相关"),
	IDSTR(WM_IME_COMPOSITIONFULL), _T("用户接口窗口不能增加编码窗口的尺寸时,IME用户接口窗口将发送WM_IME_COMPOSITIONFULL消息,可不处理,注:输入法相关"),
	IDSTR(WM_IME_SELECT), _T("系统发出WM_IME_SELECT以便选择一个新的IME输入法,注:输入法相关"),
	IDSTR(WM_IME_CHAR), _T("当打开输入法输入文字时,会发送WM_IME_CHAR消息"),
	IDSTR(WM_IME_REQUEST), _T("应用程序请求输入法时,触发发送本消息"),
	IDSTR(WM_IME_KEYDOWN), _T("在输入法录字窗口中按下按键时,触发发送本消息"),
	IDSTR(WM_IME_KEYUP), _T("在输入法录字窗口中释放按键时,触发发送本消息"),
	IDSTR(WM_MOUSEHOVER), _T("鼠标移过控件时,触发发送本消息"),
	IDSTR(WM_MOUSELEAVE), _T("鼠标离开控件时,触发发送本消息"),
	IDSTR(WM_CUT), _T("应用程序发送本消息给一个编辑框或组合框来删除当前选择的文本"),
	IDSTR(WM_COPY), _T("应用程序发送本消息给一个编辑框或组合框,以便用CF_TEXT格式复制当前选择的文本到剪贴板"),
	IDSTR(WM_PASTE), _T("应用程序发送本消息给编辑框或组合框,以便从剪贴板中得到数据"),
	IDSTR(WM_CLEAR), _T("应用程序发送本消息给编辑框或组合框,以清除当前选择的内容"),
	IDSTR(WM_UNDO), _T("应用程序发送本消息给编辑框或组合框,以撤消最后一次操作"),
	IDSTR(WM_RENDERFORMAT), _T("应用程序需要系统剪切板数据时,触发发送本消息"),
	IDSTR(WM_RENDERALLFORMATS), _T("应用程序退出时在程序退出时,系统会给当前程序发送该消息,要求提供所有格式的剪帖板数据,避免造成数据丢失"),
	IDSTR(WM_DESTROYCLIPBOARD), _T("当调用EmptyClipboard函数时,发送本消息给剪贴板的所有者"),
	IDSTR(WM_DRAWCLIPBOARD), _T("当剪贴板的内容变化时,发送本消息给剪贴板观察链的首个窗口;它允许用剪贴板观察窗口来显示剪贴板的新内容"),
	IDSTR(WM_PAINTCLIPBOARD), _T("当剪贴板包含CF_OWNERDIPLAY格式的数据,并且剪贴板观察窗口的客户区需要重画时,触发发送本消息"),
	IDSTR(WM_VSCROLLCLIPBOARD), _T("当剪贴板查看器的垂直滚动条被单击时,触发发送本消息"),
	IDSTR(WM_SIZECLIPBOARD), _T("当剪贴板包含CF_OWNERDIPLAY格式的数据,并且剪贴板观察窗口的客户区域的大小已改变时,本消息通过剪贴板观察窗口发送给剪贴板的所有者"),
	IDSTR(WM_ASKCBFORMATNAME), _T("通过剪贴板观察窗口发送本消息给剪贴板的所有者,以请求一个CF_OWNERDISPLAY格式的剪贴板的名字"),
	IDSTR(WM_CHANGECBCHAIN), _T("当一个窗口从剪贴板观察链中移去时,发送本消息给剪贴板观察链的首个窗口"),
	IDSTR(WM_HSCROLLCLIPBOARD), _T("本消息通过一个剪贴板观察窗口发送给剪贴板的所有者,它发生在当剪贴板包含CFOWNERDISPALY格式的数据,并且有个事件在剪贴板观察窗的水平滚动条上,所有者应滚动剪贴板图像并更新滚动条的值"),
	IDSTR(WM_QUERYNEWPALETTE), _T("本消息发送给将要收到焦点的窗口,本消息能使窗口在收到焦点时同时有机会实现逻辑调色板"),
	IDSTR(WM_PALETTEISCHANGING), _T("当一个应用程序正要实现它的逻辑调色板时,发本消息通知所有的应用程序"),
	IDSTR(WM_PALETTECHANGED), _T("本消息在一个拥有焦点的窗口实现它的逻辑调色板后,发送本消息给所有顶级并重叠的窗口,以此来改变系统调色板"),
	IDSTR(WM_HOTKEY), _T("当用户按下由RegisterHotKey函数注册的热键时,发送本消息"),
	IDSTR(WM_PRINT), _T("发送本消息给一个窗口请求在指定的设备上下文中绘制自身,可用于窗口截图,但对子控件截图时得到的是与子控件等大的黑块"),
	IDSTR(WM_PRINTCLIENT), _T("送本消息给一个窗口请求在指定的设备上下文中绘制其客户区(最通常是在一个打印机设备上下文中)"),
	IDSTR(WM_HANDHELDFIRST), _T("消息含义未知,搜索了整个Visual Studio 6的目录也只有其定义,却未见其使用的相关代码"),
	IDSTR(WM_HANDHELDLAST), _T("消息含义未知,搜索了整个Visual Studio 6的目录也只有其定义,却未见其使用的相关代码"),
	IDSTR(WM_AFXFIRST), _T("指定首个AFX消息(MFC)"),
//	IDSTR(WM_QUERYAFXWNDPROC), _T("该消息被MFC内部用来确认窗口过程是否使用AfxWndProc"),
//	IDSTR(WM_SIZEPARENT), _T("MFC自定义的消息,MFC的主窗口框架布局是通过给子窗口发送响应WM_SIZEPARENT来完成的,框架窗口发送本消息用的是SendMessage,各个控制子窗口用OnSizeParent响应WM_SIZEPARENT消息"),
//	IDSTR(WM_IDLEUPDATECMDUI), _T("MFC自己定义和使用的消息,当应用程序进入空闲处理状态时,将发送本消息,导致所有工具栏用户对象的状态处理函数被调用,从而改变其状态,对应的消息响应函数为:OnIdleUpdateCmdUI"),
//	IDSTR(WM_INITIALUPDATE), _T("MFC发明的消息,用于处理菜单、快捷键,发送WM_INITIALUPDATE消息给所有子窗口,消息响应函数为:CView::OnInitialUpdate"),
//	IDSTR(WM_COMMANDHELP), _T("本消息用于实现MFC的上下文敏感帮助,按下<F1键>后消息被映射到CWinApp::OnHelp。该函数会向最外层框架窗口发送本消息,本消息响应过程是自顶向下的,对应的消息响应函数为:ON_WM_HELPINFO"),
//	IDSTR(WM_HELPHITTEST), _T("本消息用于实现MFC的上下文敏感帮助,本消息必须手工添加"),
//	IDSTR(WM_EXITHELPMODE), _T("本消息用于实现MFC的上下文敏感帮助,本消息必须手工添加"),
//	IDSTR(WM_RECALCPARENT), _T("MFC自己定义和使用的消息,对应的消息响应函数为:CMainFrame::OnReCalcParent,本消息由CView发送给CMainFrame框架窗口以便重新布置窗口"),
//	IDSTR(WM_SIZECHILD), _T("MFC自己定义和使用的消息,当用户重新调整COleResizeBar的大小时,由COleResizeBar发送给其所有者窗口),"),
//	IDSTR(WM_KICKIDLE), _T("本消息是MFC中对空闲进行处理的一个未公开的消息,消息泵并不处理WM_KICKIDLE消息,收到该消息后,直接返回,WM_KICKIDLE被用来刺激空闲处理的执行,它作为一个空消息促使::GetMessage()返回"),
//	IDSTR(WM_QUERYCENTERWND), _T("MFC内部保留的未公开消息,lParam:HWND to use as centering parent;"),
//	IDSTR(WM_DISABLEMODAL), _T("MFC内部保留的未公开消息,lResult = 0,disable during modal state;lResult = 1,don't disable"),
//	IDSTR(WM_FLOATSTATUS), _T("MFC内部保留的未公开消息,wParam combination of FS_* flags below"),
//	IDSTR(WM_ACTIVATETOPLEVEL), _T("MFC内部保留的未公开消息,wParam = nState(like WM_ACTIVATE);lParam = pointer to HWND[2];lParam[0] = hWnd getting WM_ACTIVATE;lParam[1] = hWndOther"),
//	IDSTR(WM_QUERY3DCONTROLS), _T("MFC内部保留的未公开消息,lResult != 0 if 3D controls wanted"),
//	IDSTR(WM_RESERVED_0370), _T("MFC内部保留的未公开、MFC自身也未使用的消息"),
//	IDSTR(WM_RESERVED_0371), _T("MFC内部保留的未公开、MFC自己也未使用的消息"),
//	IDSTR(WM_RESERVED_0372), _T("MFC内部保留的未公开、MFC自己也未使用的消息"),
//	IDSTR(WM_SOCKET_NOTIFY), _T("已在MSDN中公开的MFC内部消息,本消息告诉socket窗口socket事件已经发生(socket窗口:CSocketWnd,隐藏,接收本消息,响应:OnSocketNotify)),"),
//	IDSTR(WM_SOCKET_DEAD), _T("MFC内部消息,MFC维护死套接字的映射,死套接字是个已关闭的套接字,参见sockcore.cpp"),
//	IDSTR(WM_SETMESSAGESTRING), _T("MFC内部消息,发送给框架窗口要求其更新状态栏字符串信息,微软MFC TN024文档中有该消息的描述,响应函数:OnSetMessageString"),
//	IDSTR(WM_POPMESSAGESTRING), _T("MFC内部消息,用来重新设置状态栏,对应的字符串是\")Ready\_T(",响应函数:OnPopMessageString"),
//	IDSTR(WM_HELPPROMPTADDR), _T("MFC内部消息,用来从相关联的框架窗口中检索m_dwPromptContext地址,注:<F1>上下文帮助相关"),
//	IDSTR(WM_OCC_LOADFROMSTREAM), _T("MFC内部消息,OCC即OLE control containers,参见相关LoadFromStream函数"),
//	IDSTR(WM_OCC_LOADFROMSTORAGE), _T("MFC内部消息,OCC即OLE control container,参见相关LoadFromStorage函数"),
//	IDSTR(WM_OCC_INITNEW), _T("MFC内部消息,OCC即OLE control container,参见相关InitNew函数"),
//	IDSTR(WM_OCC_LOADFROMSTREAM_EX), _T("MFC内部消息,OCC即OLE control container,参见相关LoadFromStreamEx函数"),
//	IDSTR(WM_OCC_LOADFROMSTORAGE_EX), _T("MFC内部消息,OCC即OLE control container,参见:ATLHOST.H/OCCMGR.CPP/WINCORE.CPP中相关代码"),
//	IDSTR(WM_QUEUE_SENTINEL), _T("MFC内部消息,用于重排消息队列,\")QUEUE SENTINEL\_T("意为消息哨兵"),
//	IDSTR(WM_RESERVED_037C), _T("MFC内部保留,供将来使用"),
//	IDSTR(WM_RESERVED_037D), _T("MFC内部保留,供将来使用"),
//	IDSTR(WM_RESERVED_037E), _T("MFC内部保留,供将来使用"),
//	IDSTR(WM_FORWARDMSG), _T("ATL中定义,让一个窗口接收的消息传递给另一个窗口进行处理"),
	IDSTR(WM_AFXLAST), _T("指定末个afx消息"),
	IDSTR(WM_PENWINFIRST), _T("指定首个Pen Window消息,参见:PENWIN.H/WINUSER.H"),
	IDSTR(WM_PENWINLAST), _T("指定末个Pen Window消息,参见:PENWIN.H/WINUSER.H"),


	IDSTR(WM_APP), _T("用于帮助应用程序自定义私有消息,通常形式为:WM_APP + X"),
	IDSTR(WM_USER), _T("用于帮助应用程序自定义私有消息,通常形式为:WM_USER + X"),
	

	
	{ 0, NULL, NULL }
};